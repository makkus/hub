apply plugin: 'war'
apply plugin: 'spring-boot'
apply plugin: 'jooq'

buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        maven { url "http://repo.spring.io/libs-snapshot" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.0.1.RELEASE")
        classpath("com.github.ben-manes:gradle-jooq-plugin:+")
        classpath("mysql:mysql-connector-java:5.1.30")
    }
}

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "http://repo.spring.io/libs-snapshot" }
}

springBoot {
    mainClass = "hub.HubService"
}

dependencies {

    compile project(":hub-model")
    compile("things:things:0.1-SNAPSHOT")

    compile("org.springframework:spring-jdbc")
    compile("org.jooq:jooq:3.3.1")
    compile("com.jolbox:bonecp:0.8.0.RELEASE")
    compile("cglib:cglib:3.1")
    compile("mysql:mysql-connector-java:5.1.30")
    testCompile("org.springframework.boot:spring-boot-starter-test")
    testCompile("org.hamcrest:hamcrest-core:1.3")
    testCompile("org.hamcrest:hamcrest-library:1.3")


    testCompile("org.mockito:mockito-core:1.9.5")

}

jooq {
    jdbc {
        url 'jdbc:mysql://localhost:3306'
        driver 'com.mysql.jdbc.Driver'
        user 'markus'
        password 'password'
    }
    generator {
        database {
            name 'org.jooq.util.mysql.MySQLDatabase'
            inputSchema 'pandora_audit'
            includes '.*'
        }
        target {
            packageName 'pan.auditdb'
            directory projectDir.getAbsolutePath()+'/src/main/generated/pan/auditdb'
        }
    }
    generate {
        deprecated false
    }
}